@model IEnumerable<csharp_lend_pc.Models.LendManagementViewModel>;
@{
    ViewData["Title"] = "教室PC管理台帳";
    int currentDisplayNum = ViewData["currentDisplayNum"] != null ? Int32.Parse(ViewData["currentDisplayNum"].ToString()) : 5;
    int currentPage =  ViewData["currentPage"] != null ? Int32.Parse(ViewData["currentPage"].ToString()) : 1;
    string word = ViewData["currentWord"] != null ? ViewData["currentWord"].ToString() : "";
    string types = ViewData["currentTypes"] != null ? ViewData["currentTypes"].ToString() : "";
    int nextPage = currentPage + 1;
    int prevPage = currentPage - 1;
    int lastPage = ViewData["lastPage"] != null ?  Int32.Parse(ViewData["lastPage"].ToString()) : 1;

    string wordQuery = word != "" ? $"&word={word}" : "";
    string typesQuery = types != "" ? $"&types={types}" : "";


    var selectListDisplayNum = new int[] {1,3,5};
    var filtersDic = new Dictionary<string, string>()
        {
            {"all", "ALL"}, {"empty" , "空き"}, {"isRent", "貸出中"}, {"isExpired", "返却日超過"}
        };
    var tableColumnsValue = new string[] { "all", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" };
    var tableColumnsLabel = new string[] { "ALL", "メーカー", "OS", "保管場所", "空き", "使用者：社員番号", "社員氏名", "貸出日", "返却日", "棚卸日","備考" };
}
@functions {
    private void getCurrentInputHidden(string word, string types, int? pageNo, int? displayNum )
    {
        if(pageNo != null) {
            <input type="hidden" name="pageNo" value="@pageNo" />
        }
        if(displayNum != null) {
            <input type="hidden" name="displayNum" value="@displayNum" />
        }
        if(word != null && word != "") {
            <input type="hidden" name="word" value="@word">
        }
        if(types != null && types != "") {
            <input type="hidden" name="types" value="@types">
        }
    }
}

<div class="col-10 d-flex justify-content-between align-items-center">
    <h1>教室PC管理台帳</h1>
    <a class="btn btn-success" href="/lend/lend-return">貸出・返却</a>
</div>

<div class="col-10 d-flex mt-5 justify-content-between align-items-center">
    <form method="get" class="col-4 px-0">
        <div class="input-group search_form px-0">
            @{
                getCurrentInputHidden("", types, null,currentDisplayNum);
            }
            <input type="text" name="word" class="form-control" placeholder="資産番号を入力してください" value="@word">
            <div class="input-group-append">
                <button class="btn btn-secondary" type="submit">
                    <img src="/img/search.svg" alt="search">
                </button>
            </div>
        </div>
    </form>
    <div class="d-flex justify-content-end">
        <div class="dropdown filter_dropdown">
            <button class="btn dropdown-toggle button_filter" type="button" id="dropdownMenuButton"
                data-toggle="dropdown" aria-expanded="false">
            </button>
            <div class="dropdown-menu px-2">
                <form method="get">
                @foreach (var item in filtersDic)
                {
                    bool isChecked = (item.Key == types) || item.Key == "all";

                    <div class="form-check">
                        <input name="types" class="form-check-input" type="radio" id="isBrokenRadio1" value="@item.Key" onchange="submit(this.form)" checked="@isChecked" />
                        <label class="form-check-label" for="types">@item.Value</label>
                    </div>
                }
                @{getCurrentInputHidden(word,"",null,currentDisplayNum);}
                </form>  
            </div>                      
        </div>
        <div class="dropdown table_dropdown">
            <button class="btn dropdown-toggle button_table" type="button" id="dropdownMenuButton"
                data-toggle="dropdown" aria-expanded="false">
            </button>
            <ul class="dropdown-menu px-2 not-close-dropdown-menu">
                @for (var j = 0; j < tableColumnsValue.Length; j++)
                {
                    if (tableColumnsValue[j] == "all")
                    {
                        <li class="all">
                            <div class="form-check d-flex align-items-center">
                                <label class="form-check-label" for="flexCheckDefault">
                                    <input checked class="form-check-input check-all" type="checkbox" value="@tableColumnsValue[@j]"
                                id="flexCheckDefault">
                                    @tableColumnsLabel[j]
                                </label>
                            </div>
                        </li>
                    }
                    else
                    {
                        <li>
                            <div class="form-check d-flex align-items-center">
                                <label class="form-check-label" for="flexCheckDefault">
                                    <input checked class="form-check-input" type="checkbox" value="@tableColumnsValue[@j]" id="flexCheckDefault">
                                    @tableColumnsLabel[j]
                                </label>
                            </div>
                        </li>
                    }
                }
            </ul>
        </div>
        <form method="get">
            <select name="displayNum" class="form-select form-select-sm select-display-num" aria-label="form-select-sm example" 
            style="width: 70px;height: 100%"  onchange="submit(this.form)">
                @foreach (var displayNum in selectListDisplayNum)
                {
                    var text = displayNum + "件";
                    if(currentDisplayNum == displayNum) {
                        <option value="@displayNum" selected>@text</option>
                    } else {
                        <option value="@displayNum">@text</option>
                    }                    
                }
            </select>
            @{getCurrentInputHidden(word, types, currentPage, null);}
        </form>        
    </div>
</div>

<div class="mt-2 col-10 overflow-auto">
    <table class="table table-striped table-bordered target_table"
        style="table-layout:auto;white-space: nowrap;overflow-x:hidden;">
        <thead>
            <tr>
                <th scope="col">No.</th>
                <th scope="col">資産番号</th>
                <th scope="col">メーカー</th>
                <th scope="col">OS</th>
                <th scope="col">保管場所</th>
                <th scope="col">空き</th>
                <th scope="col">使用者：社員番号</th>
                <th scope="col">社員氏名</th>
                <th scope="col">貸出日</th>
                <th scope="col">返却日</th>
                <th scope="col">棚卸日</th>
                <th scope="col">備考</th>
            </tr>
        </thead>
        <tbody>
            @{
                var i = 0;
                foreach (var l in Model)
                {
                    i++;
                    var name = $"{l.LastName} {l.FirstName}";
                    bool isExpiredReturn = l.LendEndAt != null && l.LendEndAt < DateTime.Today;
                    string className = isExpiredReturn ? "bg-danger" : "";
                    <tr class="@className">
                        <td> @i </td>
                        <td>
                            <a href="/lend/detail/@l.PcId">@l.PcId</a>
                        </td>
                        <td> @l.Maker</td>
                        <td> @l.Os</td>
                        <td> @l.StorageLocation</td>
                        <td> @(l.LendId == null ? "◯" : "貸出中")</td>
                        <td> @l.EmployeeId</td>
                        <td> @name</td>
                        <td> @Html.DisplayFor(m=>l.LendStartAt)</td>
                        <td> @Html.DisplayFor(m=>l.LendEndAt)</td>
                        <td> @Html.DisplayFor(m=>l.InventoryAt)</td>
                        <td> @l.Remarks</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<div class="mt-3 dataTables_paginate paging_input col-10 d-flex justify-content-center align-items-center">
    <form method="get" class="d-flex align-items-center">
        @{
                getCurrentInputHidden(word, types, null,currentDisplayNum);
        }
        <input class="paginate_input" name="pageNo"
        type="tel" style="width: 50px;" value="@currentPage" maxlength="3" oninput="value = value.replace(/[^0-9]+/i,'');">
        <span class="paginate_of mx-2"> / @lastPage</span>
        <div class="btn-group" role="group" aria-label="Basic outlined example">
            @if(currentPage == 1) {            
                <a class="btn btn-outline-primary button_left disabled"  href="#"></a>

            } else {
                <a class="btn btn-outline-primary button_left"  href="/lend?pageNo=@prevPage&displayNum=@currentDisplayNum@wordQuery@typesQuery"></a>
            } 

            @if(currentPage == lastPage) {
                <a class="btn btn-outline-primary button_right disabled" href="#"></a>  
            } else {
                <a class="btn btn-outline-primary button_right" href="/lend?pageNo=@nextPage&displayNum=@currentDisplayNum@wordQuery@typesQuery"></a>
            }       
        </div>        
    </form>    
</div>